[{"data":1,"prerenderedAt":319},["Reactive",2],{"content-query-OuAqizht3p":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"_empty":6,"title":7,"description":8,"body":9,"_type":314,"_id":315,"_source":316,"_file":317,"_extension":318},"/prototypingprocess","",false,"Prototyping Process","Prototyping is an important process when it comes to creating your own game. There are various directions and methods to build a prototype, including digital and non-digital practices. If you are interested in non-digital methods, you can follow this link and get inspiration for your own level design technique. There's also a collection of different digital tools that can all be helpful for creating your levels. In the following though, we would like to introduce an example by Alex K. of level prototyping that uses both non-digital and digital methods to guide you through the whole process and all the various iterations of the steps. Whether you want to get inspiration for your own individual approach or follow this example is, of course, totally up to your preference.",{"type":10,"children":11,"toc":301},"root",[12,20,58,65,70,75,80,86,154,159,164,183,189,194,207,212,218,223,228,233,246,251,256,268,274,279,285,290,296],{"type":13,"tag":14,"props":15,"children":17},"element","h1",{"id":16},"prototyping-process",[18],{"type":19,"value":7},"text",{"type":13,"tag":21,"props":22,"children":23},"p",{},[24,26,32,34,39,41,48,50,56],{"type":19,"value":25},"Prototyping is an important process when it comes to creating your own game. There are various directions and methods to build a prototype, including ",{"type":13,"tag":27,"props":28,"children":29},"strong",{},[30],{"type":19,"value":31},"digital",{"type":19,"value":33}," and ",{"type":13,"tag":27,"props":35,"children":36},{},[37],{"type":19,"value":38},"non-digital",{"type":19,"value":40}," practices. If you are interested in non-digital methods, you can follow ",{"type":13,"tag":42,"props":43,"children":45},"a",{"href":44},"/nondigitaltools",[46],{"type":19,"value":47},"this",{"type":19,"value":49}," link and get inspiration for your own level design technique. There's also a collection of different ",{"type":13,"tag":42,"props":51,"children":53},{"href":52},"/digitaltools",[54],{"type":19,"value":55},"digital tools",{"type":19,"value":57}," that can all be helpful for creating your levels. In the following though, we would like to introduce an example by Alex K. of level prototyping that uses both non-digital and digital methods to guide you through the whole process and all the various iterations of the steps. Whether you want to get inspiration for your own individual approach or follow this example is, of course, totally up to your preference.",{"type":13,"tag":59,"props":60,"children":62},"h2",{"id":61},"why-the-process-described-by-alex-k",[63],{"type":19,"value":64},"Why the process described by Alex K.?",{"type":13,"tag":21,"props":66,"children":67},{},[68],{"type":19,"value":69},"\"A common mistake many new designers make is to assume that gameplay cannot be tested until there is art to put into the engine.\" (Totten, 2019, p.17)",{"type":13,"tag":21,"props":71,"children":72},{},[73],{"type":19,"value":74},"Like Totten said, putting one step after the other can sometimes be very hindering once it slows down the process of creation and creativity. Instead, with prototyping one can find and prevent early mistakes, logic holes and misleading game mechanics while also providing an early, playable version and overall vision of the game.",{"type":13,"tag":21,"props":76,"children":77},{},[78],{"type":19,"value":79},"Alex K. defined their own approach of prototyping and used both digital and non-digital tools to methodically map out how the level should work and look like. As they said themselves:\r\n\"The eagerness to just jump into the engine and start blocking out a level can often be felt at this stage. While tempting, it’s typically a good idea to plan the level out a bit more and map it out beforehand. Everyone’s process is different, but the one I’m going to describe is one I feel should work for most people.\"  (Alex K. @TychoBolt, 2020, p.9)\r\n\r\nAt this point we should be aware that this is not a process set in stone and certainly not everyone can identify themselves with this approach. But the generality of this process makes it usable in many ways and it can be seen as a good way to start building your level. There are several steps that can be followed in order and some steps that are iterated to further develop your level.",{"type":13,"tag":59,"props":81,"children":83},{"id":82},"process-steps",[84],{"type":19,"value":85},"Process Steps",{"type":13,"tag":87,"props":88,"children":89},"ol",{},[90,100,109,118,127,136,145],{"type":13,"tag":91,"props":92,"children":93},"li",{},[94],{"type":13,"tag":42,"props":95,"children":97},{"href":96},"#understand-what-you-want-to-create",[98],{"type":19,"value":99},"Understand what you want to create",{"type":13,"tag":91,"props":101,"children":102},{},[103],{"type":13,"tag":42,"props":104,"children":106},{"href":105},"#create-diagrams-and-flowcharts",[107],{"type":19,"value":108},"Create diagrams and flowcharts",{"type":13,"tag":91,"props":110,"children":111},{},[112],{"type":13,"tag":42,"props":113,"children":115},{"href":114},"#draw-a-map",[116],{"type":19,"value":117},"Draw a map",{"type":13,"tag":91,"props":119,"children":120},{},[121],{"type":13,"tag":42,"props":122,"children":124},{"href":123},"#get-a-sense-of-space",[125],{"type":19,"value":126},"Get a Sense of Space",{"type":13,"tag":91,"props":128,"children":129},{},[130],{"type":13,"tag":42,"props":131,"children":133},{"href":132},"#iterate-on-the-map",[134],{"type":19,"value":135},"Iterate on the Map",{"type":13,"tag":91,"props":137,"children":138},{},[139],{"type":13,"tag":42,"props":140,"children":142},{"href":141},"#start-with-blockout",[143],{"type":19,"value":144},"Blockout",{"type":13,"tag":91,"props":146,"children":147},{},[148],{"type":13,"tag":42,"props":149,"children":151},{"href":150},"#iterate-over-the-last-steps-and-create-a-final-level",[152],{"type":19,"value":153},"Iterate",{"type":13,"tag":59,"props":155,"children":157},{"id":156},"understand-what-you-want-to-create",[158],{"type":19,"value":99},{"type":13,"tag":21,"props":160,"children":161},{},[162],{"type":19,"value":163},"First, you want to think about what it is you want to create. What are your design goals? Which statements would you like to set in your levels? Which impressions would you like to make on the player? Make sure you're on the same page with your team and have a shared vision regarding the design of the level and how it contributes to the game. Some tools and methods for this step are:",{"type":13,"tag":165,"props":166,"children":167},"ul",{},[168,173,178],{"type":13,"tag":91,"props":169,"children":170},{},[171],{"type":19,"value":172},"Write down Design statements (that you can create and compare with your team). These can also be written down into and compared with the already established design goals in your documentation (link).",{"type":13,"tag":91,"props":174,"children":175},{},[176],{"type":19,"value":177},"Sketches and Drawings if you're already certain about the view and artistic impression you want to convey. You can add these artifacts to your documentation or save them in a location where you and your team can always refer back to.",{"type":13,"tag":91,"props":179,"children":180},{},[181],{"type":19,"value":182},"Reference collections and Moodboards that can be used to catch the atmosphere of a level and help the team to communicate their vision to each other.",{"type":13,"tag":59,"props":184,"children":186},{"id":185},"create-diagrams-and-flowcharts",[187],{"type":19,"value":188},"Create Diagrams and Flowcharts",{"type":13,"tag":21,"props":190,"children":191},{},[192],{"type":19,"value":193},"In the next step, you concentrate on the spatial relations of the objects on an abstract level so that you can later build the level based on these ideas. Diagrams help in communicating the relations in various ways and you're free to draw them on paper or with digital tools. There are many diagrams that are all collected and described here(link), but we would like to list some diagrams that might be especially helpful during this step:",{"type":13,"tag":165,"props":195,"children":196},{},[197,202],{"type":13,"tag":91,"props":198,"children":199},{},[200],{"type":19,"value":201},"Molecule Diagrams: These diagrams consist of nods that represent objects or spaces, and of edges representing the relations between the nodes. The nodes can be in a spatial relationship, describing which spaces a player can reach, or the edges can depict the significance the objects have for one another. The absence of edges is also a powerful tool of secribing what is not reachable for the player. (image and link)",{"type":13,"tag":91,"props":203,"children":204},{},[205],{"type":19,"value":206},"Proximity Diagrams: Same as molecule diagrams, proximity diagrams consist of nods and edges. In contrast to molecule diagrams, though, the size of the bubbles and lines are meaningful because they can either define the size of the spaces or, refering to the edges, the importance to the ajacence of the connected bubbles. (image and link)",{"type":13,"tag":21,"props":208,"children":209},{},[210],{"type":19,"value":211},"These diagrams can also be added to your reference collections and to your documentation.",{"type":13,"tag":59,"props":213,"children":215},{"id":214},"draw-a-map",[216],{"type":19,"value":217},"Draw a Map",{"type":13,"tag":21,"props":219,"children":220},{},[221],{"type":19,"value":222},"The idea behind drawing a map is getting an idea of how the level looks like. It is enough to roughly sketch the level and the level of detail is not important here, but can be varied based on your preference. Useful tools for drawing a map are simple non-digital sketches or digital drawing tools that you and your team are familiar with.\r\nAs in the above steps, these sketches can also be added to your documentation. (image)",{"type":13,"tag":59,"props":224,"children":226},{"id":225},"get-a-sense-of-space",[227],{"type":19,"value":126},{"type":13,"tag":21,"props":229,"children":230},{},[231],{"type":19,"value":232},"Since we put some time into abstract views and rough ideas, we will now move over to more concrete steps. It makes sense to get an idea of a space first by creating diagrams, but it gets exciting when finally building something that can be tested on a playable level. To get a quick view of your level, you can use your favorite engine where you can outline your planned level with a method that is called \"Whiteblocking\" (link). Place blocks for walls, obstacles and interactable objects to test your ideas-on-paper. It's not supposed to look pretty but rather just serve the purpose of quickly transfering your ideas to a concrete level. Finding issues as early as possible as well as getting to know the scale of your level is way easier with this method and saves you a lot of time after.\r\nHere are some engines that support whiteblocking:",{"type":13,"tag":165,"props":234,"children":235},{},[236,241],{"type":13,"tag":91,"props":237,"children":238},{},[239],{"type":19,"value":240},"Unity",{"type":13,"tag":91,"props":242,"children":243},{},[244],{"type":19,"value":245},"?",{"type":13,"tag":21,"props":247,"children":248},{},[249],{"type":19,"value":250},"(image)",{"type":13,"tag":59,"props":252,"children":254},{"id":253},"iterate-on-the-map",[255],{"type":19,"value":135},{"type":13,"tag":21,"props":257,"children":258},{},[259,261,266],{"type":19,"value":260},"Once you have your first digital, playable level and adjusted it to what's possible inside the engine, go back to your map from ",{"type":13,"tag":42,"props":262,"children":263},{"href":114},[264],{"type":19,"value":265},"step 3",{"type":19,"value":267}," and transfer the ajustments to the map. This iteration between the whiteblocked level and the map makes the level more concrete and more accurate in general, smoothing out rough edges and solving conceptual mistakes. It is still not the final map since you want to iterate over and over and also look for feedback within your team during the overall process.",{"type":13,"tag":59,"props":269,"children":271},{"id":270},"start-with-blockout",[272],{"type":19,"value":273},"Start with \"Blockout\"",{"type":13,"tag":21,"props":275,"children":276},{},[277],{"type":19,"value":278},"Blocking out is a technique where you move from simple whiteblocks to more concrete forms that will later symbolize concrete objects and obstacles. This is the step where you start your testing and iteration, since you become more and more detailed with every iteration. It is better to start simple and reduce your level to rough blocks first so that you know the dimensions, the spatial layout and the flow of your level. Playing with forms and objects can change the atmosphere and the Genius Loci(link) of your level as well as creating new challenges or opportunities for the player.\r\nIt is important to get feedback as early as possible and include your team in decisions, so don't hesitate to ask them for their opinion and collaborate!",{"type":13,"tag":59,"props":280,"children":282},{"id":281},"iterate-over-the-last-steps-and-create-a-final-level",[283],{"type":19,"value":284},"Iterate over the last steps and create a final level",{"type":13,"tag":21,"props":286,"children":287},{},[288],{"type":19,"value":289},"Smoothly stepping into the last step, this is not the last step. It is rather a transition to the different stages of your level, starting from quick whiteblocking and moving on to more and more concrete blockouts that will eventually lead to the final version of the game.\r\nBelow image shows one way of iterating through the steps. You may create a beta version where whiteblocks are already replaced by artwork and all the important gameplay is already implemented and ready to be tested by a defined amount of players to improve the final version by their feedback. You may also have all the gameplay ready before blocking out the whole level (an alpha version) before you finalize your level.\r\nHowever you would like to proceed with your iterations, it is important to include feedback into your process. Don't be afraid to make mistakes; rather learn from it.\r\n(image)",{"type":13,"tag":59,"props":291,"children":293},{"id":292},"see-also",[294],{"type":19,"value":295},"See also",{"type":13,"tag":21,"props":297,"children":298},{},[299],{"type":19,"value":300},"(Totten, 2019, p.17)\r\n(Alex K. @TychoBolt, 2020, p.9)\r\nDyrda",{"title":5,"searchDepth":302,"depth":302,"links":303},2,[304,305,306,307,308,309,310,311,312,313],{"id":61,"depth":302,"text":64},{"id":82,"depth":302,"text":85},{"id":156,"depth":302,"text":99},{"id":185,"depth":302,"text":188},{"id":214,"depth":302,"text":217},{"id":225,"depth":302,"text":126},{"id":253,"depth":302,"text":135},{"id":270,"depth":302,"text":273},{"id":281,"depth":302,"text":284},{"id":292,"depth":302,"text":295},"markdown","content:prototypingprocess.md","content","prototypingprocess.md","md",1687448270588]